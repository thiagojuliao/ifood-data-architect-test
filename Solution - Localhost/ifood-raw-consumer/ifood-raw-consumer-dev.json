{"paragraphs":[{"title":"Inicialização dos pacotes, definindo funções e variáveis","text":"%pyspark\n\n###############################################\n#   Importando pacotes & definindo funções    #\n###############################################\n\nfrom datetime import *\nfrom pyspark import StorageLevel\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.functions import *\nfrom pyspark.sql.types import *\n\n###############################\n#   Definição de variáveis    #\n###############################\n\n# Caminho de origem da pouso consumer\norigem_pouso = \"hdfs://localhost:9000/ifood-landing-consumer/full-load/consumer.csv.gz\"\n\n# Caminho de destino da raw consumer\ndestino_raw = \"hdfs://localhost:9000/ifood-raw-consumer/\"\n\n# Inicia sessão spark\nspark = SparkSession.builder.appName(\"ifood-raw-consumer-dev\").getOrCreate()\n\n# Configurações básicas para o spark\nspark.conf.set(\"spark.sql.maxPartitionBytes\", 200 * 1024 * 1024) # Seta a quantidade máxima de bytes em uma partição ao ler os arquivos de entrada (Entre 100MB e 200MB é o ideal)\nspark.conf.set(\"spark.sql.sources.partitionOverwriteMode\", \"DYNAMIC\") # Necessário para sobrescrever partições","user":"anonymous","dateUpdated":"2019-12-24T17:51:38-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1577213239770_-1092533205","id":"20191221-013414_540016259","dateCreated":"2019-12-24T15:47:19-0300","dateStarted":"2019-12-24T17:51:38-0300","dateFinished":"2019-12-24T17:51:38-0300","status":"FINISHED","progressUpdateIntervalMs":500,"focus":true,"$$hashKey":"object:4234"},{"title":"Lê os dado origem","text":"%pyspark\n\n# Lê a pouso de origem\npousoDF = spark.read.option(\"header\", True).csv(origem_pouso)","user":"anonymous","dateUpdated":"2019-12-24T17:50:36-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1577213239777_757242789","id":"20191221-014425_1407235368","dateCreated":"2019-12-24T15:47:19-0300","dateStarted":"2019-12-24T17:50:36-0300","dateFinished":"2019-12-24T17:50:52-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4235"},{"text":"%pyspark\n\npousoDF.printSchema()","user":"anonymous","dateUpdated":"2019-12-24T17:50:56-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"root\n |-- customer_id: string (nullable = true)\n |-- language: string (nullable = true)\n |-- created_at: string (nullable = true)\n |-- active: string (nullable = true)\n |-- customer_name: string (nullable = true)\n |-- customer_phone_area: string (nullable = true)\n |-- customer_phone_number: string (nullable = true)\n\n"}]},"apps":[],"jobName":"paragraph_1577213239778_107227061","id":"20191221-014647_1782218080","dateCreated":"2019-12-24T15:47:19-0300","dateStarted":"2019-12-24T17:50:56-0300","dateFinished":"2019-12-24T17:50:57-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4236"},{"text":"%pyspark\n\npousoDF.show(5, False)","user":"anonymous","dateUpdated":"2019-12-24T15:47:19-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+\n|customer_id                         |language|created_at              |active|customer_name|customer_phone_area|customer_phone_number|\n+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+\n|00039466-560f-4e57-85a2-d4753cd901be|pt-br   |2018-04-05T14:49:18.165Z|true  |NUNO         |46                 |816135924            |\n|001a1267-31a3-4f5b-a028-d7e323864b08|pt-br   |2018-01-14T21:40:02.141Z|true  |ADRIELLY     |59                 |231330577            |\n|003ae1d5-67b8-4a04-b055-0e4e9622771a|pt-br   |2018-01-07T03:47:15.554Z|true  |PAULA        |62                 |347597883            |\n|004629bf-c3fc-42f5-a133-fd34d2bd17fa|pt-br   |2018-01-10T22:17:08.160Z|true  |HELTON       |13                 |719366842            |\n|00467336-6561-4406-b6f2-987b06e77401|pt-br   |2018-04-06T00:16:20.935Z|true  |WENDER       |76                 |543232158            |\n+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1577213239779_2110035150","id":"20191221-014701_1952909635","dateCreated":"2019-12-24T15:47:19-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4237"},{"text":"%pyspark\n\n# Aqui verificamos possíveis duplicidades na chave..no caso não há logo temos apenas os dados dos consumidores ativos que entraram em cada dia\npousoDF.groupBy(\"customer_id\").agg(count(\"*\").alias(\"dup\")).filter(col(\"dup\") > 1).show(5, False)","user":"anonymous","dateUpdated":"2019-12-24T15:47:19-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+-----------+---+\n|customer_id|dup|\n+-----------+---+\n+-----------+---+\n\n"}]},"apps":[],"jobName":"paragraph_1577213239781_-989493780","id":"20191221-021405_900398952","dateCreated":"2019-12-24T15:47:19-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4238"},{"title":"Cria e grava a tabela raw","text":"%pyspark\n\n# Cria a tabela raw\nrawDF = pousoDF \\\n    .withColumn(\"dt_proc\", current_date()) \\\n    .withColumn(\"dt\", current_date())\n\nrawDF.write.partitionBy(\"dt\").mode(\"overwrite\").option(\"compression\", \"snappy\").format(\"parquet\").save(destino_raw)","user":"anonymous","dateUpdated":"2019-12-24T17:53:17-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[]},"apps":[],"jobName":"paragraph_1577213239783_-2134314122","id":"20191221-014717_699819168","dateCreated":"2019-12-24T15:47:19-0300","dateStarted":"2019-12-24T17:53:17-0300","dateFinished":"2019-12-24T17:53:52-0300","status":"FINISHED","progressUpdateIntervalMs":500,"$$hashKey":"object:4239"},{"text":"%pyspark\n\nrawDF.show(5, False)","user":"anonymous","dateUpdated":"2019-12-24T15:47:19-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+----------+----------+\n|customer_id                         |language|created_at              |active|customer_name|customer_phone_area|customer_phone_number|dt_proc   |dt        |\n+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+----------+----------+\n|00039466-560f-4e57-85a2-d4753cd901be|pt-br   |2018-04-05T14:49:18.165Z|true  |NUNO         |46                 |816135924            |2019-12-21|2018-04-05|\n|001a1267-31a3-4f5b-a028-d7e323864b08|pt-br   |2018-01-14T21:40:02.141Z|true  |ADRIELLY     |59                 |231330577            |2019-12-21|2018-01-14|\n|003ae1d5-67b8-4a04-b055-0e4e9622771a|pt-br   |2018-01-07T03:47:15.554Z|true  |PAULA        |62                 |347597883            |2019-12-21|2018-01-07|\n|004629bf-c3fc-42f5-a133-fd34d2bd17fa|pt-br   |2018-01-10T22:17:08.160Z|true  |HELTON       |13                 |719366842            |2019-12-21|2018-01-10|\n|00467336-6561-4406-b6f2-987b06e77401|pt-br   |2018-04-06T00:16:20.935Z|true  |WENDER       |76                 |543232158            |2019-12-21|2018-04-06|\n+------------------------------------+--------+------------------------+------+-------------+-------------------+---------------------+----------+----------+\nonly showing top 5 rows\n\n"}]},"apps":[],"jobName":"paragraph_1577213239784_-1295321917","id":"20191221-015115_28674003","dateCreated":"2019-12-24T15:47:19-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4240"},{"title":"Validação","text":"%pyspark\n\n# Leitura da base final\nrawDF_ = spark.read.parquet(destino_raw + \"/*/*.parquet\")\n\n# Validação Volumétrica\nprint(\"> Volumetria de saída equivale-se a de entrada ? --> {}\".format(pousoDF.count() == rawDF_.count()))\n\n# Validação do Schema\nschema = pousoDF.schema\nschema_ = rawDF_.drop(\"dt_proc\").schema\ncolunas = pousoDF.columns\ncolunas_ = rawDF_.drop(\"dt_proc\").columns\ncolunas.sort()\ncolunas_.sort()\nprint(\"> O schema de saída equivale-se ao de entrada ? ---> {}\".format(schema == schema_ or colunas == colunas_))","user":"anonymous","dateUpdated":"2019-12-24T15:47:19-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"title":true,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"results":{"code":"SUCCESS","msg":[{"type":"TEXT","data":"> Volumetria de saída equivale-se a de entrada ? --> True\n> O schema de saída equivale-se ao de entrada ? ---> True\n"}]},"apps":[],"jobName":"paragraph_1577213239785_536372596","id":"20191221-015127_1384615969","dateCreated":"2019-12-24T15:47:19-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4241"},{"text":"%pyspark\n","user":"anonymous","dateUpdated":"2019-12-24T15:47:19-0300","config":{"editorSetting":{"language":"python","editOnDblClick":false,"completionKey":"TAB","completionSupport":true},"colWidth":12,"editorMode":"ace/mode/python","fontSize":9,"results":{},"enabled":true},"settings":{"params":{},"forms":{}},"apps":[],"jobName":"paragraph_1577213239785_1538940168","id":"20191221-020722_855911732","dateCreated":"2019-12-24T15:47:19-0300","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:4242"}],"name":"ifood-raw-consumer-dev","id":"2EV5YEUJZ","noteParams":{},"noteForms":{},"angularObjects":{"python:shared_process":[],"spark:shared_process":[]},"config":{"isZeppelinNotebookCronEnable":false,"looknfeel":"default","personalizedMode":"false"},"info":{}}